generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  email               String   @unique
  password            String
  firstName           String?
  lastName            String?
  role                String   @default("agent")
  deviceFingerprint   String?
  files               ClientFile[]
  sessions            Session[]
  sessionHistory      SessionHistory[]
}

model CompanyInfo {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  businessName    String
  agentName       String
  email           String
  phoneNumber     String
  companyLogo     String?
  agentProfilePic String?

}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SessionHistory {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  userId            String    @db.ObjectId
  sessionToken      String
  deviceFingerprint String?
  ipAddress         String?
  userAgent         String?
  browserName       String?   // e.g., Chrome, Firefox
  browserVersion    String?   // e.g., 126.0.0
  osName            String?   // e.g., Windows, macOS
  osVersion         String?   // e.g., 10, 14.4.1
  deviceType        String?   // e.g., desktop, mobile, tablet
  deviceVendor      String?   // e.g., Apple, Samsung
  deviceModel       String?   // e.g., iPhone, Galaxy S21
  loginAt           DateTime  @default(now())
  logoutAt          DateTime?
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ClientFile {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String   @db.ObjectId
  user           User     @relation(fields: [userId], references: [id])
  deviceFingerprint String?
  fileName       String
  createdByRole  String   
  category       String   
  boxesData      Json?    
  tablesData     Json?  
  combinedResults Json?  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
